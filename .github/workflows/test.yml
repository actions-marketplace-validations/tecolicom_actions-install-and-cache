name: test

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
  workflow_dispatch:

jobs:
  initial:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: |
          prefix=$(brew --prefix)
          echo "::set-output name=prefix::$prefix"
      - uses: ./
        id: action
        with:
          cache: workflow
          tools: rcs
          install: brew install
          directory: ${{ steps.setup.outputs.prefix }}
      - run: rcs --version
      - run: test "${{ steps.action.outputs.cache-hit }}" != true

  cached:
    needs: initial
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - id: setup
        run: |
          prefix=$(brew --prefix)
          echo "::set-output name=prefix::$prefix"
      - uses: ./
        id: action
        with:
          cache: workflow
          tools: rcs
          install: brew install
          directory: ${{ steps.setup.outputs.prefix }}
      - run: rcs --version
      - run: test "${{ steps.action.outputs.cache-hit }}" == true

#    - id: install-brew
#      shell: bash
#      run: |
#        if prefix=$(brew --prefix)
#          echo brew is install on $prefix
#        then
#          :
#        else
#          bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
#          test -d ~/.linuxbrew && PATH="$HOME/.linuxbrew/bin:$HOME/.linuxbrew/sbin:$PATH"
#          test -d /home/linuxbrew/.linuxbrew && PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
#          brew --prefix
#          printenv
#          echo "$(brew --prefix)/bin" >> $GITHUB_PATH
#          echo "$(brew --prefix)/sbin'" >> $GITHUB_PATH
#        fi

#  cached:
#    needs: initial
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ./
#        id: action
#        with:
#          cache: workflow
#          tools: bmake
#      - run: (cd __test__; . run.sh )
#      - run: test "${{ steps.action.outputs.cache-hit }}" == true
#  no-cache:
#    needs: initial
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ./
#        id: action
#        with:
#          cache: no
#          tools: bmake
#      - run: (cd __test__; . run.sh )
#      - run: test "${{ steps.action.outputs.cache-hit }}" != true
#  cache-gen:
#    needs: initial
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ./
#        id: action
#        with:
#          cache: workflow
#          tools: bmake
#          cache-gen: v2
#      - run: (cd __test__; . run.sh )
#      - run: test "${{ steps.action.outputs.cache-hit }}" != true
